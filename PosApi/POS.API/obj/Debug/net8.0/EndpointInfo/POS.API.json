{
  "openapi": "3.0.1",
  "info": {
    "title": "Apn Api",
    "description": "Apn integration red activa",
    "termsOfService": "https://apensource.org/licenses/MIT",
    "contact": {
      "name": "Red Activa",
      "url": "https://redactiva.com/",
      "email": "aprogramador12@transferunion.com"
    },
    "license": {
      "name": "Use under transferUnion",
      "url": "https://redactiva.com/"
    },
    "version": "v1"
  },
  "paths": {
    "/api/Persona/Filtered": {
      "post": {
        "tags": [
          "Persona"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseFilterRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseFilterRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaseFilterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Persona/select": {
      "get": {
        "tags": [
          "Persona"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Persona/{personaId}": {
      "get": {
        "tags": [
          "Persona"
        ],
        "parameters": [
          {
            "name": "personaId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Persona/register": {
      "post": {
        "tags": [
          "Persona"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonaRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonaRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonaRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Persona/edit/{personaId}": {
      "put": {
        "tags": [
          "Persona"
        ],
        "parameters": [
          {
            "name": "personaId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonaRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonaRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonaRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Persona/Remove/{personaId}": {
      "delete": {
        "tags": [
          "Persona"
        ],
        "parameters": [
          {
            "name": "personaId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/Register": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/Generate/Token": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BaseFilterRequest": {
        "type": "object",
        "properties": {
          "numPage": {
            "type": "integer",
            "format": "int32"
          },
          "numRecordsPage": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "type": "string",
            "nullable": true
          },
          "sort": {
            "type": "string",
            "nullable": true
          },
          "records": {
            "type": "integer",
            "format": "int32"
          },
          "numFilter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "textFilter": {
            "type": "string",
            "nullable": true
          },
          "stateFilter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "nullable": true
          },
          "download": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersonaRequestDto": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "firtsName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "minLength": 1,
            "type": "string"
          },
          "image": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenRequestDto": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserRequestDto": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Jwt Bearer Token",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}